{"ast":null,"code":"var _jsxFileName = \"/Users/juleshb250/PROJECTS/cashapp/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  isLoading: true,\n  error: null\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  LOAD_USER_START: 'LOAD_USER_START',\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\n  UPDATE_USER: 'UPDATE_USER',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Auth provider component\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Configure axios defaults\n  useEffect(() => {\n    if (state.token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n      localStorage.setItem('token', state.token);\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      localStorage.removeItem('token');\n    }\n  }, [state.token]);\n\n  // Load user on app start\n  useEffect(() => {\n    if (state.token && !state.user) {\n      loadUser();\n    } else {\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n        payload: null\n      });\n    }\n  }, []);\n\n  // Login function\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_START\n      });\n      const response = await axios.post('/api/auth/login', credentials);\n      const {\n        token,\n        user\n      } = response.data;\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n      toast.success(`Welcome back, ${user.fullName}!`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_START\n      });\n      const response = await axios.post('/api/auth/register', userData);\n      const {\n        token,\n        user\n      } = response.data;\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: {\n          token,\n          user\n        }\n      });\n      toast.success(`Welcome to Trinity Metro Bike, ${user.fullName}!`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Load user function\n  const loadUser = async () => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_START\n      });\n      const response = await axios.get('/api/auth/profile');\n      const {\n        user\n      } = response.data;\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n        payload: user\n      });\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n        payload: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to load user'\n      });\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await axios.post('/api/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n      toast.success('Logged out successfully');\n    }\n  };\n\n  // Verify email function\n  const verifyEmail = async otp => {\n    try {\n      const response = await axios.post('/api/auth/verify-email', {\n        otp\n      });\n\n      // Update user state\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_USER,\n        payload: {\n          isEmailVerified: true\n        }\n      });\n      toast.success('Email verified successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const errorMessage = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Email verification failed';\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Resend verification email\n  const resendVerification = async () => {\n    try {\n      await axios.post('/api/auth/resend-verification');\n      toast.success('Verification email sent!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const errorMessage = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to send verification email';\n      toast.error(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Update user profile\n  const updateProfile = updates => {\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_USER,\n      payload: updates\n    });\n  };\n\n  // Clear error\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Context value\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    loadUser,\n    verifyEmail,\n    resendVerification,\n    updateProfile,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"GUSXxL/WUElrtHc/X73NyHNRMdw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","toast","jsxDEV","_jsxDEV","initialState","user","token","localStorage","getItem","isAuthenticated","isLoading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","LOAD_USER_START","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","UPDATE_USER","CLEAR_ERROR","authReducer","state","action","type","payload","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","dispatch","defaults","headers","common","setItem","removeItem","loadUser","login","credentials","response","post","data","success","fullName","_error$response","_error$response$data","errorMessage","message","register","userData","_error$response2","_error$response2$data","get","_error$response3","_error$response3$data","logout","console","verifyEmail","otp","isEmailVerified","_error$response4","_error$response4$data","resendVerification","_error$response5","_error$response5$data","updateProfile","updates","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/juleshb250/PROJECTS/cashapp/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  isLoading: true,\n  error: null\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  LOAD_USER_START: 'LOAD_USER_START',\n  LOAD_USER_SUCCESS: 'LOAD_USER_SUCCESS',\n  LOAD_USER_FAILURE: 'LOAD_USER_FAILURE',\n  UPDATE_USER: 'UPDATE_USER',\n  CLEAR_ERROR: 'CLEAR_ERROR'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n    case AUTH_ACTIONS.LOAD_USER_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n\n    case AUTH_ACTIONS.LOAD_USER_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n    case AUTH_ACTIONS.LOAD_USER_FAILURE:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      };\n\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload }\n      };\n\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = createContext();\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\n// Auth provider component\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Configure axios defaults\n  useEffect(() => {\n    if (state.token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n      localStorage.setItem('token', state.token);\n    } else {\n      delete axios.defaults.headers.common['Authorization'];\n      localStorage.removeItem('token');\n    }\n  }, [state.token]);\n\n  // Load user on app start\n  useEffect(() => {\n    if (state.token && !state.user) {\n      loadUser();\n    } else {\n      dispatch({ type: AUTH_ACTIONS.LOAD_USER_FAILURE, payload: null });\n    }\n  }, []);\n\n  // Login function\n  const login = async (credentials) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n      \n      const response = await axios.post('/api/auth/login', credentials);\n      const { token, user } = response.data;\n\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: { token, user }\n      });\n\n      toast.success(`Welcome back, ${user.fullName}!`);\n      return { success: true };\n\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Register function\n  const register = async (userData) => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.LOGIN_START });\n      \n      const response = await axios.post('/api/auth/register', userData);\n      const { token, user } = response.data;\n\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_SUCCESS,\n        payload: { token, user }\n      });\n\n      toast.success(`Welcome to Trinity Metro Bike, ${user.fullName}!`);\n      return { success: true };\n\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Registration failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Load user function\n  const loadUser = async () => {\n    try {\n      dispatch({ type: AUTH_ACTIONS.LOAD_USER_START });\n      \n      const response = await axios.get('/api/auth/profile');\n      const { user } = response.data;\n\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_SUCCESS,\n        payload: user\n      });\n\n    } catch (error) {\n      dispatch({\n        type: AUTH_ACTIONS.LOAD_USER_FAILURE,\n        payload: error.response?.data?.message || 'Failed to load user'\n      });\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await axios.post('/api/auth/logout');\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\n      toast.success('Logged out successfully');\n    }\n  };\n\n  // Verify email function\n  const verifyEmail = async (otp) => {\n    try {\n      const response = await axios.post('/api/auth/verify-email', { otp });\n      \n      // Update user state\n      dispatch({\n        type: AUTH_ACTIONS.UPDATE_USER,\n        payload: { isEmailVerified: true }\n      });\n\n      toast.success('Email verified successfully!');\n      return { success: true };\n\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Email verification failed';\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Resend verification email\n  const resendVerification = async () => {\n    try {\n      await axios.post('/api/auth/resend-verification');\n      toast.success('Verification email sent!');\n      return { success: true };\n\n    } catch (error) {\n      const errorMessage = error.response?.data?.message || 'Failed to send verification email';\n      toast.error(errorMessage);\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Update user profile\n  const updateProfile = (updates) => {\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_USER,\n      payload: updates\n    });\n  };\n\n  // Clear error\n  const clearError = () => {\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\n  };\n\n  // Context value\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    loadUser,\n    verifyEmail,\n    resendVerification,\n    updateProfile,\n    clearError\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}